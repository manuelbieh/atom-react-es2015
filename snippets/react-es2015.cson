'.source.js.jsx':
  'Component Class [React Snippet]':
    'prefix': 'rc'
    'body': """
        import React from 'react';

        export default class ${1:MyComponent} extends React.Component {

            static propTypes = {
                ${2}
            };

            constructor(props) {
                super(props);
                this.state = {};
            }

            render() {
                return (
                    ${3:<div></div>}
                );
            }

        }
    """

  'Component Class with Child Context [React Snippet]':
    'prefix': 'rcc'
    'body': """
        import React from 'react';

        export default class ${1:MyComponent} extends React.Component {

            static propTypes = {
                ${2}
            };

            static childContextTypes = {
                ${3}
            };
    
            constructor(props) {
                super(props);
                this.state = {};
            }

            getChildContext() {
                return {
                    ${4}
                };
            }

            render() {
                return (
                    ${5:<div></div>}
                );
            }

        }
    """
    
  'Functional Component [React Snippet]':
    'prefix': 'rfn'
    'body': """
        import React from 'react';

        export default function ${1}(props) {
            return (
                ${2:<div>MyComponent</div>}
            );
        }

        ${1}.propTypes = {
        };
    """

  'Functional Component with Context [React Snippet]':
    'prefix': 'rfnc'
    'body': """
        import React from 'react';

        export default function ${1}(props, context) {
            return (
                ${2:<div>MyComponent</div>}
            );
        }

        ${1}.propTypes = {
        };
        
        ${1}.contextTypes = {
        };
    """

  'PropType componentWillMount [React Snippet]':
    'prefix': 'cwm',
    'body': """
        componentWillMount() {
            ${1}
        }
    """

  'PropType componentDidMount [React Snippet]':
    'prefix': 'cdm',
    'body': """
        componentDidMount() {
            ${1}
        }
    """

  'PropType shouldComponentUpdate [React Snippet]':
    'prefix': 'scu',
    'body': """
        shouldComponentUpdate(nextProps, nextState) {
            ${1}
        }
    """

  'PropType componentWillReceiveProps [React Snippet]':
    'prefix': 'cwrp',
    'body': """
        componentWillReceiveProps(nextProps) {
            ${1}
        }
    """

  'PropType componentWillUpdate [React Snippet]':
    'prefix': 'cwu',
    'body': """
        componentWillUpdate(nextProps, nextState) {
            ${1}
        }
    """

  'PropType componentDidUpdate [React Snippet]':
    'prefix': 'cdu',
    'body': """
        componentDidUpdate(prevProps, prevState) {
            ${1}
        }
    """

  'PropType componentWillUnmount [React Snippet]':
    'prefix': 'cwun',
    'body': """
        componentWillUnmount() {
            ${1}
        }
    """

  'PropTypes [React Snippet]':
    'prefix': 'rpt',
    'body': """
        static propTypes = {
            ${1}
        };
    """
    
  'ContextTypes [React Snippet]':
    'prefix': 'rct',
    'body': """
        static contextTypes = {
            ${1}
        };
    """

  'ChildContextTypes [React Snippet]':
    'prefix': 'rcct',
    'body': """
        static childContextTypes = {
            ${1}
        };

        getChildContext() {
            return {
                ${2}
            };
        }
    """

  # PropType string
  'PropType string [React Snippet]':
    'prefix': 'pts',
    'body': "PropTypes.string,"
  'PropType string (required) [React Snippet]':
    'prefix': 'ptS',
    'body': "PropTypes.string.isRequired,"

  # PropType number
  'PropType number [React Snippet]':
    'prefix': 'ptn',
    'body': "PropTypes.number,"
  'PropType number (required) [React Snippet]':
    'prefix': 'ptN',
    'body': "PropTypes.number.isRequired,"

  # PropType object
  'PropType object [React Snippet]':
    'prefix': 'pto',
    'body': "PropTypes.object,"
  'PropType object (required) [React Snippet]':
    'prefix': 'ptO',
    'body': "PropTypes.object.isRequired,"

  # PropType array
  'PropType array [React Snippet]':
    'prefix': 'pta',
    'body': "PropTypes.array,"
  'PropType array (required) [React Snippet]':
    'prefix': 'ptA',
    'body': "PropTypes.array.isRequired,"

  # PropType any
  'PropType any [React Snippet]':
    'prefix': 'ptany',
    'body': "PropTypes.any,"
  'PropType any (required) [React Snippet]':
    'prefix': 'ptAny',
    'body': "PropTypes.any.isRequired,"

  # PropType bool
  'PropType bool [React Snippet]':
    'prefix': 'ptb',
    'body': "PropTypes.bool,"
  'PropType bool (required) [React Snippet]':
    'prefix': 'ptB',
    'body': "PropTypes.bool.isRequired,"

  # PropType function
  'PropType function [React Snippet]':
    'prefix': 'ptf',
    'body': "PropTypes.func,"
  'PropType function (required) [React Snippet]':
    'prefix': 'ptF',
    'body': "PropTypes.func.isRequired,"

  # PropType shape
  'PropType shape [React Snippet]':
    'prefix': 'ptsh',
    'body': """
    PropTypes.shape({
        ${2}
    }),
    """
  'PropType shape (required) [React Snippet]':
    'prefix': 'ptSh',
    'body': """
    PropTypes.shape({
        ${1}
    }).isRequired,
    """

  # PropType oneOf
  'PropType oneOf [React Snippet]':
    'prefix': 'ptoo',
    'body': """
    PropTypes.oneOf([
        ${1}
    ]),
    """
  'PropType oneOf (required) [React Snippet]':
    'prefix': 'ptOo',
    'body': """
    PropTypes.oneOf([
        ${1}
    ]).isRequired,
    """

  # PropType oneOfType
  'PropType oneOfType [React Snippet]':
    'prefix': 'ptoot',
    'body': """
    PropTypes.oneOfType([
        ${1}
    ]),
    """
  'PropType oneOfType (required) [React Snippet]':
    'prefix': 'ptOot',
    'body': """
    PropTypes.oneOfType([
        ${1}
    ]).isRequired,"
    """

  # PropType arrayOf
  'PropType arrayOf [React Snippet]':
    'prefix': 'ptao',
    'body': """
    PropTypes.arrayOf(${1}),
    """
  'PropType arrayOf (required) [React Snippet]':
    'prefix': 'ptAo',
    'body': """
    PropTypes.arrayOf(${1}).isRequired,"
    """
    
  # PropType instanceOf
  'PropType instanceOf [React Snippet]':
    'prefix': 'ptio',
    'body': """
    PropTypes.instanceOf(${1}),
    """
  'PropType instanceOf (required) [React Snippet]':
    'prefix': 'ptIo',
    'body': """
    PropTypes.instanceOf(${1}).isRequired,"
    """

  # PropType element
  'PropType element [React Snippet]':
    'prefix': 'pte',
    'body': "PropTypes.element,"
  'PropType element (required) [React Snippet]':
    'prefix': 'ptE',
    'body': "PropTypes.element.isRequired,"

  # PropType node
  'PropType node [React Snippet]':
    'prefix': 'ptnode',
    'body': "PropTypes.node,"
  'PropType node (required) [React Snippet]':
    'prefix': 'ptNode',
    'body': "PropTypes.node.isRequired,"



  # PropType string
  'PropType string [React Snippet]':
    'prefix': 'rpts',
    'body': "React.PropTypes.string,"
  'PropType string (required) [React Snippet]':
    'prefix': 'rptS',
    'body': "React.PropTypes.string.isRequired,"

  # PropType number
  'PropType number [React Snippet]':
    'prefix': 'rptn',
    'body': "React.PropTypes.number,"
  'PropType number (required) [React Snippet]':
    'prefix': 'rptN',
    'body': "React.PropTypes.number.isRequired,"

  # PropType object
  'PropType object [React Snippet]':
    'prefix': 'rpto',
    'body': "React.PropTypes.object,"
  'PropType object (required) [React Snippet]':
    'prefix': 'rptO',
    'body': "React.PropTypes.object.isRequired,"

  # PropType array
  'PropType array [React Snippet]':
    'prefix': 'rpta',
    'body': "React.PropTypes.array,"
  'PropType array (required) [React Snippet]':
    'prefix': 'rptA',
    'body': "React.PropTypes.array.isRequired,"

  # PropType any
  'PropType any [React Snippet]':
    'prefix': 'rptany',
    'body': "React.PropTypes.any,"
  'PropType any (required) [React Snippet]':
    'prefix': 'rptAny',
    'body': "React.PropTypes.any.isRequired,"

  # PropType bool
  'PropType bool [React Snippet]':
    'prefix': 'rptb',
    'body': "React.PropTypes.bool,"
  'PropType bool (required) [React Snippet]':
    'prefix': 'rptB',
    'body': "React.PropTypes.bool.isRequired,"

  # PropType function
  'PropType function [React Snippet]':
    'prefix': 'rptf',
    'body': "React.PropTypes.func,"
  'PropType function (required) [React Snippet]':
    'prefix': 'rptF',
    'body': "React.PropTypes.func.isRequired,"

  # PropType shape
  'PropType shape [React Snippet]':
    'prefix': 'rptsh',
    'body': """
    React.PropTypes.shape({
        ${2}
    }),
    """
  'PropType shape (required) [React Snippet]':
    'prefix': 'rptSh',
    'body': """
    React.PropTypes.shape({
        ${1}
    }).isRequired,
    """

  # PropType oneOf
  'PropType oneOf [React Snippet]':
    'prefix': 'rptoo',
    'body': """
    React.PropTypes.oneOf([
        ${1}
    ]),
    """
  'PropType oneOf (required) [React Snippet]':
    'prefix': 'rptOo',
    'body': """
    React.PropTypes.oneOf([
        ${1}
    ]).isRequired,
    """

  # PropType oneOfType
  'PropType oneOfType [React Snippet]':
    'prefix': 'rptoot',
    'body': """
    React.PropTypes.oneOfType([
        ${1}
    ]),
    """
  'PropType oneOfType (required) [React Snippet]':
    'prefix': 'rptOot',
    'body': """
    React.PropTypes.oneOfType([
        ${1}
    ]).isRequired,"
    """

  # PropType arrayOf
  'PropType arrayOf [React Snippet]':
    'prefix': 'rptao',
    'body': """
      React.PropTypes.arrayOf(${1}),
    """
  'PropType arrayOf (required) [React Snippet]':
    'prefix': 'rptAo',
    'body': """
      React.PropTypes.arrayOf(${1}).isRequired,"
    """

  # PropType arrayOf
  'PropType arrayOf [React Snippet]':
    'prefix': 'rptao',
    'body': """
      React.PropTypes.arrayOf(${1}),
    """
  'PropType arrayOf (required) [React Snippet]':
    'prefix': 'rptAo',
    'body': """
      React.PropTypes.arrayOf(${1}).isRequired,"
    """

  # PropType instanceOf
  'PropType instanceOf [React Snippet]':
    'prefix': 'rptio',
    'body': """
      React.PropTypes.instanceOf(${1}),
    """
  'PropType instanceOf (required) [React Snippet]':
    'prefix': 'rptIo',
    'body': """
      React.PropTypes.instanceOf(${1}).isRequired,"
    """

  # PropType element
  'PropType element [React Snippet]':
    'prefix': 'rpte',
    'body': "React.PropTypes.element,"
  'PropType element (required) [React Snippet]':
    'prefix': 'rptE',
    'body': "React.PropTypes.element.isRequired,"

  # PropType node
  'PropType node [React Snippet]':
    'prefix': 'rptnode',
    'body': "React.PropTypes.node,"
  'PropType node (required) [React Snippet]':
    'prefix': 'ptNode',
    'body': "React.PropTypes.node.isRequired,"
